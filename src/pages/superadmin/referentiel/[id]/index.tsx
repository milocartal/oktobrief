import { GetServerSideProps, type NextPage } from "next";
import Head from "next/head";
import { getSession, signIn, signOut, useSession } from "next-auth/react";
import { type Session as SessionAuth } from 'next-auth'

import { api } from "~/utils/api";

import dynamic from "next/dynamic";
import { useState } from "react";

import Link from "next/link";
import { BiChevronDown, BiClipboard, BiListCheck } from "react-icons/bi";
import { FaInbox, FaOctopusDeploy } from "react-icons/fa";

const QuillNoSSRWrapper = dynamic(import('react-quill'), {
    ssr: false,
    loading: () => <p>Loading ...</p>,
})

export const getServerSideProps: GetServerSideProps<{
    session: SessionAuth
}> = async function (context) {
    const session = await getSession(context)
    const admin = session?.user.superadmin

    if (!session || !admin) {
        return {
            redirect: {
                destination: '/',
                permanent: false,
            },
        }
    }

    return {
        props: { session }
    }
};

const AddReferentiel: NextPage = () => {

    return (
        <>
            <Head>
                <title>Créer une Formation</title>
                <meta name="description" content="Generated by create-t3-app" />

            </Head>
            <main className="flex min-h-screen flex-col items-start justify-start bg-[#F3F3F3] pl-[100px]">
                <h1 className="text-4xl font-extrabold text-black w-full">Créer un référentiel</h1>

                <div className="flex w-full flex-col items-center justify-start bg-white px-[40px] py-[40px] mb-5 gap-5 rounded-xl">
                    <span className="flex w-full flex-row items-center justify-between mb-3">
                        <h2 className="text-2xl text-black">Données sur la plateforme</h2>
                    </span>

                    <div className="flex w-full flex-row items-center justify-center gap-16">
                        <div className="flex flex-col items-center justify-center">
                            <h3 className="text-7xl mb-2 text-[#2EA3A5]">76</h3>
                            <p className="text-3xl mb-5 text-[#0E6073] font-[700]">Apprenants</p>
                        </div>
                        <div className="flex flex-col items-center justify-center">
                            <h3 className="text-7xl mb-2 text-[#2EA3A5]">26</h3>
                            <p className="text-3xl mb-5 text-[#0E6073] font-[700]">Promos créées</p>
                        </div>
                        <div className="flex flex-col items-center justify-center">
                            <h3 className="text-7xl mb-2 text-[#2EA3A5]">62</h3>
                            <p className="text-3xl mb-5 text-[#0E6073] font-[700]">Projets créés</p>
                        </div>
                    </div>
                </div>
                <div className="flex min-h-screen w-full flex-col items-center justify-start px-[25px] pt-[40px]">
                </div>



                <div className="fixed top-0 left-0 w-[100px] bg-[#0e6073] h-screen flex flex-col items-center text-white text-sm justify-between py-5">

                    <div className="flex flex-col gap-8 items-center justify-center">
                        <Link href={"/"}><img src="logo-carre.png" className="max-w-[4rem] mb-5" alt="Logo de la société Oktopod réprésentant un pouple enroulé qui forme un O" /></Link>
                        <Link href={""} className="flex flex-col items-center justify-center gap-1 transition hover:bg-[#2EA3A5]"><BiClipboard className="text-3xl" />Projet</Link>
                        <Link href={""} className="flex flex-col items-center justify-center gap-1 transition hover:bg-[#2EA3A5]"><FaInbox className="text-3xl" />Rendu</Link>
                        <Link href={""} className="flex flex-col items-center justify-center gap-1 transition hover:bg-[#2EA3A5]"><BiListCheck className="text-3xl" />Suivi</Link>
                        <Link href={""} className="flex flex-col items-center justify-center gap-2 transition hover:bg-[#2EA3A5]"><FaOctopusDeploy className="text-3xl" />Référentiel</Link>
                        <Link href={"/superadmin"} className="flex flex-col items-center justify-center gap-2 transition hover:bg-[#2EA3A5]"><img src="superhero.svg" className="w-10" />Super Admin</Link>
                    </div>

                    <AuthShowcase />
                </div>
            </main>

        </>
    );
};

export default AddReferentiel;

const AuthShowcase: React.FC = () => {
    const { data: sessionData } = useSession();

    return (
        <div className="flex flex-col items-center justify-center gap-4">
            <button
                className="rounded-full bg-white/10 font-semibold no-underline transition hover:bg-white/20"
                onClick={sessionData ? () => void signOut() : () => void signIn()}
            >
                {sessionData ? sessionData.user.image ? <img src={sessionData.user.image} className="w-[4rem] h-[4rem] object-cover rounded-full" /> : <p className="mx-10 my-3">{sessionData.user.name}</p> : <p className="mx-3 my-3">Sign In</p>}
            </button>
        </div>
    );
};