import { GetServerSideProps, type NextPage } from "next";
import { getSession } from "next-auth/react";
import Head from "next/head";

import { type Session as SessionAuth } from 'next-auth'

import NavBar from "~/pages/components/navbar";
import { BiSearch } from "react-icons/bi";


export const getServerSideProps: GetServerSideProps<{
    session: SessionAuth
}> = async function (context) {
    const session = await getSession(context)

    if (!session) {
        return {
            redirect: {
                destination: '/login',
                permanent: false,
            },
        }
    }

    return {
        props: { session }
    }
};

const AssignBrief: NextPage = () => {
    const DATA = [
        {
            "id": 1,
            "nom": "Lorem Ipsum",
            "email": "loremipsum@mail.com"
        },
        {
            "id": 2,
            "nom": "Lorem Ipsum",
            "email": "loremipsum@mail.com"
        },
        {
            "id": 3,
            "nom": "Lorem Ipsum",
            "email": "loremipsum@mail.com"
        },
        {
            "id": 4,
            "nom": "Lorem Ipsum",
            "email": "loremipsum@mail.com"
        },
        {
            "id": 5,
            "nom": "Lorem Ipsum",
            "email": "loremipsum@mail.com"
        },
        {
            "id": 6,
            "nom": "Lorem Ipsum",
            "email": "loremipsum@mail.com"
        },
        {
            "id": 7,
            "nom": "Lorem Ipsum",
            "email": "loremipsum@mail.com"
        },
        {
            "id": 8,
            "nom": "Lorem Ipsum",
            "email": "loremipsum@mail.com"
        },
        {
            "id": 9,
            "nom": "Lorem Ipsum",
            "email": "loremipsum@mail.com"
        },
        {
            "id": 10,
            "nom": "Lorem Ipsum",
            "email": "loremipsum@mail.com"
        },
        {
            "id": 11,
            "nom": "Lorem Ipsum",
            "email": "loremipsum@mail.com"
        }
    ]

    return (
        <>
      <Head>
        <title>OktoBrief</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen min-w-screen flex-col items-start justify-start bg-[#F3F3F3] pl-[100px]">
        <h2 className="text-2xl text-black">Assigner par promo</h2>
        <div className="flex min-h-screen h-screen w-full flex-col items-center justify-start px-[10%] pt-[40px]">
            <div className="flex flex-row h-[90%] w-full justify-between">
                <div className="flex flex-col items-center bg-white h-full w-[40%] p-5 overflow-auto">
                    <div className="pr-[1rem] rounded-full bg-white shadow-[inset_4px_4px_12px_4px_rgba(0,0,0,0.25)] w-[70%] flex flex-row justify-between items-center mr-2">
                        <BiSearch className="text-3xl text-black ml-4" />
                        <input
                            type='text'
                            name="promoDateStart"
                            className="pr-[1rem] pl-1 py-3 w-full bg-transparent"
                            autoComplete="off"
                        />
                    </div>
                    {DATA.map((item) => {
                        return (
                            <span className="flex flex-row justify-between items-center w-full mt-5" key={item.id}>
                                <div className="flex flex-row items-center">
                                    {<button className="flex flex-row items-center justify-center w-6 h-6 bg-[#D9D9D9] rounded-full mr-5">
                                        <p className="text-[#0E6073]">-</p>
                                    </button>}
                                    <img src="/userPFP.png" className="w-12 h-12 rounded-full object-cover mr-3" alt="Photo de profil utilisateur"/>
                                    <p className="text-base text-black font-semibold">{item.nom}</p>
                                </div>
                                <button className="flex flex-row items-center justify-center w-6 h-6 bg-[#0E6073] rounded-full mr-2">
                                    <p className="text-[#fff]">+</p>
                                </button>
                            </span>
                        )
                    })}
                </div>
                <div className="bg-white h-full w-[59%] p-5 flex flex-col justify-between">
                    <span className="flex flex-row justify-between items-center">
                        <h2 className="text-2xl text-black">Assigner par promo</h2>
                        <div className="pr-[1rem] rounded-full bg-white shadow-[inset_4px_4px_12px_4px_rgba(0,0,0,0.25)] w-[45%] flex flex-row justify-between items-center mr-2">
                            <BiSearch className="text-3xl text-black ml-4" />
                            <input
                                type='text'
                                name="promoDateStart"
                                className="pr-[1rem] pl-1 py-3 w-full bg-transparent"
                                autoComplete="off"
                            />
                        </div>
                    </span>
                    <button className="bg-[#0E6073] self-end py-2 px-7 text-white rounded-lg">Ajouter</button>
                </div>
            </div>
        </div>

        <NavBar />
      </main>
    </>
    );
};

export default AssignBrief;